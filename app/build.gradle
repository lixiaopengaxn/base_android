apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    defaultConfig {
        applicationId rootProject.ext.textstring.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.publish.version
        //string
        testInstrumentationRunner rootProject.ext.textstring.testInst

        //添加如下配置就OK了
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

        //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "arm64-v8a", "x86_64"
        }

        //方法个数超出的问题
        multiDexEnabled true
        //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    //解决库依赖冲突问题
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }



    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation project(':LayoutManagerGroup')
    implementation project(':poputil')
    implementation project(':agentweb')
    implementation project(':recyclerView')
    implementation project(':AndPermission')

    //test
    testImplementation rootProject.ext.dependencies.junit

    // support
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.appcompatV7

    //recyclerView
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.supportConfig

    //design
    implementation rootProject.ext.dependencies.designConfig

    //卡片效果
    implementation rootProject.ext.dependencies.cardView

    //图片加载
    implementation rootProject.ext.otherlib.glide

    //处理rxjava内存泄漏,基础组件
    implementation rootProject.ext.rxlifeCycle.rxlifecycle

    //如果你想绑定到Android特定的生命周期
    implementation rootProject.ext.rxlifeCycle.rxlifecycle_android

    //如果你想要预先写好的Activities和Fragments，你可以作为提供者的子类
    implementation rootProject.ext.rxlifeCycle.rxlifecycle_componets

    //RxJava2.0所需依赖
    implementation rootProject.ext.okhttp.rxjava

    //Rxandroid2.0线程调度依赖
    implementation rootProject.ext.okhttp.rxandroid

    // 大神写的这个库可以支持到rxjava2.X
    implementation rootProject.ext.okhttp.retrofit2_rxjava2_adapter

    //Retrofit2.0所需依赖
    implementation rootProject.ext.okhttp.retrofit

    //结果转为实体类所需依赖
    implementation rootProject.ext.okhttp.converter_gson

    //RxJava2.0+Retrofit2.0适配依赖
    implementation rootProject.ext.okhttp.adapter_rxjava2

    //OKHttp3.0依赖
    implementation rootProject.ext.okhttp.okhttp

    //OKHttp优化策略依赖
    implementation rootProject.ext.okhttp.interceptor

    //结果转为基本类型所需依赖
    implementation rootProject.ext.okhttp.converter_scalars

    //组件视图绑定依赖
    implementation rootProject.ext.otherlib.butterknife
    implementation rootProject.ext.otherlib.butterknife_compiler

    //dialog
    implementation rootProject.ext.otherlib.sweetalert

    //加载本地图片，裁剪等~~~
    implementation rootProject.ext.file.crop
    implementation rootProject.ext.file.multipleimageselect
    implementation rootProject.ext.file.advancedluban

    //    //KLog

    //    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'

    //webView
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'


}
