apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    defaultConfig {
        applicationId rootProject.ext.textstring.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.publish.version
        //string
        testInstrumentationRunner rootProject.ext.textstring.testInst

        //添加如下配置就OK了
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //解决库依赖冲突问题
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //test
    testImplementation rootProject.ext.dependencies.junit
    // support
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.appcompatV7
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.supportConfig
    implementation rootProject.ext.dependencies.designConfig
    implementation rootProject.ext.dependencies.cardView
    implementation rootProject.ext.otherlib.glide
    //处理rxjava内存泄漏,基础组件
    implementation rootProject.ext.rxlifeCycle.rxlifecycle
    //如果你想绑定到Android特定的生命周期
    implementation rootProject.ext.rxlifeCycle.rxlifecycle_android
    //如果你想要预先写好的Activities和Fragments，你可以作为提供者的子类
    implementation rootProject.ext.rxlifeCycle.rxlifecycle_componets

    //RxJava2.0所需依赖
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    //Rxandroid2.0线程调度依赖
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // 大神写的这个库可以支持到rxjava2.X
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    //Retrofit2.0所需依赖
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //结果转为实体类所需依赖
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //RxJava2.0+Retrofit2.0适配依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    //OKHttp3.0依赖
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    //OKHttp优化策略依赖
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    //结果转为基本类型所需依赖
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    //组件视图绑定依赖
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton:butterknife-compiler:8.8.1'
    //dialog
    implementation 'com.github.f0ris.sweetalert:library:1.5.1'
//    //KLog
//    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'


}
